-- MySQL Script generated by MySQL Workbench
-- Tue Nov  2 19:02:33 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema cp_registry
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema cp_registry
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cp_registry` DEFAULT CHARACTER SET utf8 ;
USE `cp_registry` ;

-- -----------------------------------------------------
-- Table `cp_registry`.`iot_device`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cp_registry`.`iot_device` (
  `id` INT NOT NULL,
  `lat` DOUBLE NOT NULL,
  `long` DOUBLE NOT NULL,
  `battery_level` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cp_registry`.`sensor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cp_registry`.`sensor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` ENUM('smoke', 'gas', 'temperature', 'uv') NOT NULL,
  `iot_device_id` INT NOT NULL,
  PRIMARY KEY (`id`, `iot_device_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_sensor_iot_device1_idx` (`iot_device_id` ASC) VISIBLE,
  CONSTRAINT `fk_sensor_iot_device1`
    FOREIGN KEY (`iot_device_id`)
    REFERENCES `cp_registry`.`iot_device` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cp_registry`.`measurement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cp_registry`.`measurement` (
  `id` INT NOT NULL,
  `value` INT NOT NULL,
  `sensor_id` INT NOT NULL,
  PRIMARY KEY (`id`, `sensor_id`),
  INDEX `fk_measurement_sensor1_idx` (`sensor_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `fk_measurement_sensor1`
    FOREIGN KEY (`sensor_id`)
    REFERENCES `cp_registry`.`sensor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cp_registry`.`event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cp_registry`.`event` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `timestamp` TIMESTAMP NOT NULL,
  `severity_level` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cp_registry`.`iot_device_triggers_event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cp_registry`.`iot_device_triggers_event` (
  `iot_device_id` INT NOT NULL,
  `event_id` INT NOT NULL,
  PRIMARY KEY (`iot_device_id`, `event_id`),
  INDEX `fk_iot_device_has_event_event1_idx` (`event_id` ASC) VISIBLE,
  INDEX `fk_iot_device_has_event_iot_device1_idx` (`iot_device_id` ASC) VISIBLE,
  CONSTRAINT `fk_iot_device_has_event_iot_device1`
    FOREIGN KEY (`iot_device_id`)
    REFERENCES `cp_registry`.`iot_device` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_iot_device_has_event_event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `cp_registry`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
